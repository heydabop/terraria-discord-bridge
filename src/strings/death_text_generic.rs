use std::collections::HashMap;

pub fn get() -> HashMap<&'static str, &'static str> {
    [
        ("Slain", "{0} was slain"),
        ("Eviscerated", "{0} was eviscerated"),
        ("Murdered", "{0} was murdered"),
        ("FaceTornOff", "{0}'s face was torn off"),
        ("EntrailsRippedOut", "{0}'s entrails were ripped out"),
        ("Destroyed", "{0} was destroyed"),
        ("SkullCrushed", "{0}'s skull was crushed"),
        ("Massacred", "{0} got massacred"),
        ("Impaled", "{0} got impaled"),
        ("TornInHalf", "{0} was torn in half"),
        ("Decapitated", "{0} was decapitated"),
        ("ArmTornOff", "{0} let their arms get torn off"),
        (
            "InnardsBecameOutards",
            "{0} watched their innards become outards",
        ),
        ("Dissected", "{0} was brutally dissected"),
        ("ExtremitiesDetached", "{0}'s extremities were detached"),
        ("Mangled", "{0}'s body was mangled"),
        ("Ruptured", "{0}'s vital organs were ruptured"),
        ("PileOfFlesh", "{0} was turned into a pile of flesh"),
        ("Removed", "{0} was removed from {1}"),
        ("Snapped", "{0} got snapped in half"),
        ("Cut", "{0} was cut down the middle"),
        ("Chopped", "{0} was chopped up"),
        ("Plead", "{0}'s plea for death was answered"),
        ("Ripped", "{0}'s meat was ripped off the bone"),
        ("Flailing", "{0}'s flailing about was finally stopped"),
        ("HeadRemoved", "{0} had their head removed"),
        ("Unplugged", "{0}'s bowels were unplugged"),
        ("JourneysEnd", "{0}'s journey was ended"),
        ("Trashed", "{0} was sent to Ocram's House"),
        ("Macerated", "{0} was macerated"),
        ("Exsanguinated", "{0} was exsanguinated"),
        ("BoneZone", "{0} was sent to the bone zone"),
        ("Lobotomy", "{0} was spontaneously lobotomized"),
        ("Pulp", "{0} was pressed into a succulent pulp"),
        ("SadMeat", "{0} was ground into sad meat"),
        ("Shattered", "{0}'s bones were shattered"),
        ("MonsterFood", "{0} was turned into monster food"),
        ("Remodeled", "{0} had their home remodeled"),
        ("LostBlood", "{0} was voluntold to donate blood"),
        ("PeeledCap", "{0} had their cap peeled back"),
        ("TopKnot", "{0}'s top knot was carved off"),
        ("Parts", "{0}'s parts were misplaced"),
        ("Sauce", "{0} was blended into a zesty sauce"),
        ("SpineRip", "{0}'s spine was ripped out"),
        ("Streak", "{0}'s living streak was ended"),
        ("Amputated", "{0} received a forced amputation"),
        ("NeckSnap", "{0}'s neck was snapped"),
        ("Shredded", "{0} was shredded to bits"),
        ("FatalInjury", "{0} succumbed to a fatal injury"),
        (
            "ExpirationDate",
            "{0} was informed of their expiration date",
        ),
        ("Incompetence", "{0}'s incompetence was put on display"),
        ("Extractinated", "{0}'s soul was extractinated"),
        ("Euthanized", "{0} underwent a merciful euthanasia"),
        ("BottomUp", "{0} was eaten from the bottom up"),
        ("Deboned", "{0} was deboned"),
        ("Stolen", "{0} had both kidneys stolen"),
        ("Depravity", "{0}'s depravity was ended"),
        ("Disc", "{0}'s disc was herniated"),
        ("Science", "{0}'s body was donated to science"),
        ("Brain", "{0} had their brain turned to jam"),
        ("LongPig", "{0} was turned into long pig"),
        ("TheFarm", "{0} was sent to the farm"),
        ("PoppedClogs", "{0}'s clogs were popped"),
        ("Ticker", "{0}'s ticker was stopped"),
        ("Whacked", "{0} was whacked in the head"),
        ("RubbedOut", "{0} got rubbed out"),
        ("Degloved", "{0} was degloved"),
        ("Flayed", "{0} was flayed"),
        ("Ganked", "{0} was ganked"),
        ("Spanked", "{0} got spanked"),
        ("GotGot", "{0} got got"),
        ("Murked", "{0} got murked"),
        ("GlassCoffin", "{0} was put in a glass coffin"),
        ("WrongGrass", "{0} was put on the wrong side of the grass"),
        ("Forgotten", "{0} will quickly be forgotten"),
        ("Smote", "{0} was smote"),
    ]
    .iter()
    .cloned()
    .collect()
}
